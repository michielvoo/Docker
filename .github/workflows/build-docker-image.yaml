name: Build Docker image

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string

defaults:
  run:
    shell: pwsh

jobs:
  publish:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Test
        shell: pwsh
        working-directory: ${{ inputs.path }}
        run: |
          Invoke-Pester -Configuration @{
             Run = @{
                 Exit = $true
             }
          }

      - name: Build
        shell: pwsh
        working-directory: ${{ inputs.path }}
        run: |
          $docker = ConvertFrom-Json $(docker version --format "json")
          if (-not ($docker.Server.Platform.Name.StartsWith("Docker Desktop"))) {
              # Register handlers for additional architectures
              docker run --privileged "docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64"
          }

          # The "default" builder uses the "docker" driver, which does not support multi-platform build
          # Create a new builder that uses the "docker-container" driver, which does supports multi-platform builds
          docker buildx create --name "multi-platform" --driver "docker-container"

          # Build the multi-platform image using the "multi-platform" builder
          docker buildx --builder "multi-platform" build --load --platform "linux/amd64,linux/arm64" --tag "${{ inputs.path }}" .

          $image = ConvertFrom-Json $(docker image inspect --format "json" "${{ inputs.path }}")
          $image[0].Architecture
          $image[1].Architecture
